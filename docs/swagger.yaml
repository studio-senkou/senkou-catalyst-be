basePath: /
definitions:
  dtos.CreateCategoryDTO:
    properties:
      name:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - name
    type: object
  dtos.CreateMerchantRequestDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dtos.LoginRequestDTO:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dtos.LoginResponseDTO:
    properties:
      access_token:
        type: string
      access_token_expiry:
        type: string
      refresh_token:
        type: string
      refresh_token_expiry:
        type: string
    type: object
  dtos.RefreshTokenRequestDTO:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dtos.UpdateMerchantRequestDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      merchant_id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Merchant:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        description: |-
          MerchantID string         `json:"merchant_id"  gorm:"type:char(32);unique"`
          Merchant   *Merchant      `json:"merchant"     gorm:"foreignKey:MerchantID;references:ID"`
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Catalyst Team
  description: 'This is the API documentation for the Catalyst application.<style>.models
    {display: none !important}</style>'
  title: Catalyst API Swagger
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password to receive access and refresh
        tokens
      parameters:
      - description: Request to authenticate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful response
          schema:
            $ref: '#/definitions/dtos.LoginResponseDTO'
      summary: Login user
      tags:
      - Auth
  /auth/logout:
    delete:
      description: Logout user by invalidating their session
      responses:
        "200":
          description: Logout successful response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Auth
  /auth/refresh:
    put:
      consumes:
      - application/json
      description: Refresh access token using a valid refresh token
      parameters:
      - description: Request to refresh access token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RefreshTokenRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            $ref: '#/definitions/dtos.LoginResponseDTO'
        "400":
          description: Validation failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - Auth
  /merchants:
    get:
      description: Retrieve all merchants associated with the user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/fiber.Map'
                  - properties:
                      merchants:
                        items:
                          $ref: '#/definitions/models.Merchant'
                        type: array
                    type: object
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get User Merchants
      tags:
      - Merchant
    post:
      consumes:
      - application/json
      description: Create a merchant account for the user
      parameters:
      - description: Create merchant request
        in: body
        name: dtos.CreateMerchantRequestDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateMerchantRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  $ref: '#/definitions/models.Merchant'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create Merchant
      tags:
      - Merchant
  /merchants/{id}:
    delete:
      description: Delete a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete Merchant
      tags:
      - Merchant
    get:
      description: Retrieve a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  $ref: '#/definitions/models.Merchant'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get Merchant by ID
      tags:
      - Merchant
    put:
      description: Update a merchant's details
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Merchant request
        in: body
        name: dtos.UpdateMerchantRequestDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateMerchantRequestDTO'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/fiber.Map'
                  - properties:
                      merchant:
                        $ref: '#/definitions/models.Merchant'
                    type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                errors:
                  items:
                    type: string
                  type: array
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update Merchant
      tags:
      - Merchant
  /merchants/{merchantID}/categories:
    get:
      consumes:
      - application/json
      description: Retrieve all categories associated with a specific merchant
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/fiber.Map'
                  - properties:
                      categories:
                        items:
                          $ref: '#/definitions/models.Category'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                ' error':
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get all categories for a merchant
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create a new category for a merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchantID
        required: true
        type: string
      - description: Create Category DTO
        in: body
        name: CreateCategoryDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/fiber.Map'
                  - properties:
                      category:
                        $ref: '#/definitions/models.Category'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                ' errors':
                  items:
                    type: string
                  type: array
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/fiber.Map'
            - properties:
                ' error':
                  type: string
                message:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - Categories
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
      tags:
      - Users
schemes:
- http
swagger: "2.0"
